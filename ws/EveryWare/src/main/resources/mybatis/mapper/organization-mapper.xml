<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="organizationMapper">

	<select id="selectEmpList" resultType="EmpVo">
		SELECT
			E.EMP_CODE
			, E.EMP_NAME
			, E.EMP_E_MAIL 
			, E.EMP_TEL 
			, E.EMP_PHONE
			, E.EMP_JOIN_DATE
			, E.EMP_PROFILE_NAME
			, C.COM_NAME AS COM_NAME
			, D.DEPT_NAME AS DEPT_NAME
			, R.RANK_NAME AS RANK_NAME
			, J.JOB_NAME AS JOB_NAME
			, T.RIGHT_NAME AS RIGHT_NAME
		 FROM EMP E
		 JOIN COM C
  		ON E.COM_CODE = C.COM_CODE
  		JOIN  DEPT D
  		ON E.DEPT_CODE = D.DEPT_CODE
  		JOIN RANK R
  		ON E.RANK_CODE = R.RANK_CODE
  		JOIN JOB J
  		ON E.EMP_JOB_CODE = J.JOB_CODE
  		JOIN RIGHT T
  		ON E.RIGHT_CODE = T.RIGHT_CODE
		WHERE EMP_STATUS = 'N'
		OR EMP_STATUS ='R'
		ORDER BY R.RANK_CODE ASC, D.DEPT_DEPTH ASC
	</select>
	
	<select id="selectEmpListByWord" resultType="EmpVo">
		SELECT
			E.EMP_CODE
			, E.EMP_NAME
			, E.EMP_E_MAIL 
			, E.EMP_TEL 
			, E.EMP_PHONE
			, E.EMP_JOIN_DATE
			, E.EMP_PROFILE_NAME
			, C.COM_NAME AS COM_NAME
			, D.DEPT_NAME AS DEPT_NAME
			, R.RANK_NAME AS RANK_NAME
			, J.JOB_NAME AS JOB_NAME
			, T.RIGHT_NAME AS RIGHT_NAME
		 FROM EMP E
		 JOIN COM C
  		ON E.COM_CODE = C.COM_CODE
  		JOIN  DEPT D
  		ON E.DEPT_CODE = D.DEPT_CODE
  		JOIN RANK R
  		ON E.RANK_CODE = R.RANK_CODE
  		JOIN JOB J
  		ON E.EMP_JOB_CODE = J.JOB_CODE
  		JOIN RIGHT T
  		ON E.RIGHT_CODE = T.RIGHT_CODE
		WHERE EMP_STATUS = 'N'
		AND EMP_NAME LIKE '%' ||  #{word} || '%'
		OR EMP_STATUS ='R'
		AND EMP_NAME LIKE '%' ||  #{word} || '%'
	</select>
	
	<select id="selectDeptList" resultType="DeptVo">
		SELECT 
			A.DEPT_CODE
			, (CASE 
                WHEN A.HIGH_DEPT_CODE = null THEN A.DEPT_NAME
                WHEN A.HIGH_DEPT_CODE = B.DEPT_CODE THEN B.DEPT_NAME
            END) AS HIGH_DEPT_NAME
            , A.HIGH_DEPT_CODE
            , A.DEPT_NAME
			, A.DEPT_HEAD_CODE
			, A.DEPT_STATUS
            , A.DEPT_DEPTH
		FROM DEPT A
        LEFT OUTER JOIN DEPT B
        ON A.HIGH_DEPT_CODE = B.DEPT_CODE
		WHERE A.DEPT_STATUS = 'N'
		ORDER BY A.HIGH_DEPT_CODE, A.DEPT_DEPTH, A.DEPT_CODE ASC
	</select>
	
	<select id="selectCountAll" resultType="int">
		SELECT COUNT(*)
		FROM EMP
		WHERE EMP_STATUS = 'N'
		OR EMP_STATUS = 'R'
	</select>
	
	<select id="selectEmpListByPage" resultType="EmpVo">
		SELECT
			E.EMP_CODE
			, E.EMP_NAME
			, E.EMP_E_MAIL 
			, E.EMP_TEL 
			, E.EMP_PHONE
			, E.EMP_ID
			, TO_CHAR(E.EMP_JOIN_DATE,'YYYY-MM-DD') AS EMP_JOIN_DATE
			, E.EMP_PROFILE_NAME
			, E.EMP_BIRTHDAY
			, TO_CHAR(E.EMP_PROMOTION_DATE,'YYYY-MM-DD')AS EMP_PROMOTION_DATE
			, E.EMP_ADDRESS1
			, E.EMP_ADDRESS2
			, E.EMP_STATUS
			, C.COM_NAME AS COM_NAME
			, D.DEPT_NAME AS DEPT_NAME
			, R.RANK_NAME AS RANK_NAME
			, J.JOB_NAME AS JOB_NAME
			, T.RIGHT_NAME AS RIGHT_NAME
		 FROM EMP E
		 JOIN COM C
  		ON E.COM_CODE = C.COM_CODE
  		JOIN  DEPT D
  		ON E.DEPT_CODE = D.DEPT_CODE
  		JOIN RANK R
  		ON E.RANK_CODE = R.RANK_CODE
  		JOIN JOB J
  		ON E.EMP_JOB_CODE = J.JOB_CODE
  		JOIN RIGHT T
  		ON E.RIGHT_CODE = T.RIGHT_CODE
		WHERE EMP_STATUS = 'N'
		OR EMP_STATUS ='R'
		ORDER BY E.EMP_CODE ASC
	</select>
	
	<select id="selectRankList" resultType="RankVo">
		SELECT 
		    RANK_CODE
		    , RANK_NAME
		    , RANK_LEVEL
		    FROM RANK
		 WHERE RANK_STATUS = 'N'
		 ORDER BY RANK_CODE ASC
	</select>
	
	<select id="selectJobList" resultType="JobVo">
		SELECT
		    JOB_CODE
		    , JOB_NAME
		FROM JOB
		WHERE JOB_STATUS = 'N'
		ORDER BY JOB_CODE ASC
	</select>
	
	<insert id="insertEmp">
		INSERT INTO EMP (
		    EMP_CODE
		    , COM_CODE
		    , DEPT_CODE
		    , RANK_CODE
		    , EMP_JOB_CODE
		    , RIGHT_CODE
		    , EMP_NAME
		    , EMP_ID
		    , EMP_PWD
		) VALUES (
		    SEQ_EMP_NO.NEXTVAL
		    , 1
		    , #{deptCode}
		    , #{rankCode}
		    , #{empJobCode}
		    , 4
		    , #{empName}
		    , #{empId}
		    , #{empPwd}
		)
	</insert>
	
	<select id="checkIdDup"  resultType="int">
		SELECT COUNT(*) FROM EMP
		WHERE
			EMP_ID = #{id}
	</select>
	
	<select id="selectEmpListByEmpName" resultType="EmpVo">
		SELECT
			E.EMP_CODE
			, E.EMP_NAME
			, E.EMP_E_MAIL 
			, E.EMP_TEL 
			, E.EMP_PHONE
			, E.EMP_ID
			, TO_CHAR(E.EMP_JOIN_DATE,'YYYY-MM-DD') AS EMP_JOIN_DATE
			, E.EMP_PROFILE_NAME
			, E.EMP_BIRTHDAY
			, E.EMP_PROMOTION_DATE
			, E.EMP_ADDRESS1
			, E.EMP_ADDRESS2
			, E.EMP_STATUS
			, C.COM_NAME AS COM_NAME
			, D.DEPT_NAME AS DEPT_NAME
			, R.RANK_NAME AS RANK_NAME
			, J.JOB_NAME AS JOB_NAME
			, T.RIGHT_NAME AS RIGHT_NAME
		 FROM EMP E
		 JOIN COM C
  		ON E.COM_CODE = C.COM_CODE
  		JOIN  DEPT D
  		ON E.DEPT_CODE = D.DEPT_CODE
  		JOIN RANK R
  		ON E.RANK_CODE = R.RANK_CODE
  		JOIN JOB J
  		ON E.EMP_JOB_CODE = J.JOB_CODE
  		JOIN RIGHT T
  		ON E.RIGHT_CODE = T.RIGHT_CODE
		WHERE EMP_STATUS = 'N'
		AND EMP_NAME LIKE '%' ||  #{empData} || '%'
		OR EMP_STATUS = 'N'
		AND UPPER(EMP_ID) LIKE UPPER('%' ||  #{empData} || '%')
		OR EMP_STATUS ='R'
		AND EMP_NAME LIKE '%' ||  #{empData} || '%'
		OR EMP_STATUS ='R'
		AND UPPER(EMP_ID) LIKE UPPER ('%' ||  #{empData} || '%')
	</select>
	
	<update id="updateCheckedRank"  parameterType="java.util.Map">
		<foreach collection="empCodeList" item="item" index="index" open="DECLARE BEGIN" close="; END;" separator=";"> 
			UPDATE EMP
			SET
				RANK_CODE = #{rankCodeList[0]}
				, EMP_PROMOTION_DATE = SYSDATE
				WHERE EMP_CODE = #{item}
		 </foreach> 
	</update>
	
	<select id="selectUpdatedRank" resultType="EmpVo">
		SELECT 
			R.RANK_NAME AS RANK_NAME
			, TO_CHAR(E.EMP_PROMOTION_DATE,'YYYY-MM-DD') AS EMP_PROMOTION_DATE
		FROM EMP E
		JOIN RANK R 
		ON E.RANK_CODE = R.RANK_CODE
		WHERE E.EMP_CODE = #{updatedEmpCode}
	</select>
	
	<update id="updateCheckedJob"  parameterType="java.util.Map">
		<foreach collection="empCodeList" item="item" index="index" open="DECLARE BEGIN" close="; END;" separator=";"> 
			UPDATE EMP
			SET
				EMP_JOB_CODE = #{jobCodeList[0]}
				WHERE EMP_CODE = #{item}
		 </foreach> 
	</update>
	
	<select id="selectUpdatedJob" resultType="String">
		SELECT 
			J.JOB_NAME AS JOB_NAME
		FROM EMP E
		JOIN JOB J 
		ON E.EMP_JOB_CODE = J.JOB_CODE
		WHERE E.EMP_CODE = #{updatedEmpCode}
	</select>
	

	<update id="updateCheckedDept"  parameterType="java.util.Map">
		<foreach collection="empCodeList" item="item" index="index" open="DECLARE BEGIN" close="; END;" separator=";"> 
			UPDATE EMP
			SET
				DEPT_CODE = #{deptCodeList[0]}
				WHERE EMP_CODE = #{item}
		 </foreach> 
	</update>
	
	<select id="selectUpdatedDept" resultType="String">
		SELECT 
			D.DEPT_NAME AS DEPT_NAME
		FROM EMP E
		JOIN DEPT D
		ON E.DEPT_CODE = D.DEPT_CODE
		WHERE E.EMP_CODE = #{updatedEmpCode}
	</select>
	
	<update id="updateCheckedStatus"  parameterType="java.util.Map">
		<foreach collection="empCodeList" item="item" index="index" open="DECLARE BEGIN" close="; END;" separator=";"> 
			UPDATE EMP
			SET
				EMP_STATUS = #{statusList[0]}
				WHERE EMP_CODE = #{item}
		 </foreach> 
	</update>
	
	<select id="selectUpdatedStatus" resultType="String">
		SELECT 
			EMP_STATUS
		FROM EMP 
		WHERE EMP_CODE = #{updatedEmpCode}
	</select>
	
	<update id="updateCheckedFileName"  parameterType="java.util.Map">
		<foreach collection="empCodeList" item="item" index="index" open="DECLARE BEGIN" close="; END;" separator=";">
			UPDATE EMP
			SET
				EMP_PROFILE_NAME = #{fileList[0]}
				WHERE EMP_CODE = #{item}
		 </foreach> 
	</update>
	
	<select id="selectUpdatedFileName" resultType="String">
		SELECT 
			EMP_PROFILE_NAME
		FROM EMP 
		WHERE EMP_CODE = #{updatedEmpCode}
	</select>
	
	<select id="selectAdminList" resultType="EmpVo">
		SELECT
			E.EMP_CODE
			, E.EMP_NAME
			, E.EMP_PROFILE_NAME
            , E.EMP_ID
			, R.RANK_NAME
			, E.RANK_CODE
            , D.DEPT_NAME
			, E.DEPT_CODE
			, T.RIGHT_NAME
			, E.RIGHT_CODE
		FROM EMP E
		JOIN RANK R
		ON E.RANK_CODE = R.RANK_CODE
		JOIN DEPT D
		ON E.DEPT_CODE = D.DEPT_CODE
		JOIN RIGHT T
		ON E.RIGHT_CODE = T.RIGHT_CODE
		WHERE E.RIGHT_CODE = 1
		OR E.RIGHT_CODE = 2
		OR E.RIGHT_CODE = 3
	</select>
	
	<update id="updateAdmin">
		UPDATE EMP
		SET
			RIGHT_CODE = '4'
			WHERE EMP_CODE = ${adminCode}
	</update>
	
	<select id="selectEmpListForAdmin" resultType="EmpVo">
		SELECT
			E.EMP_CODE
			, E.EMP_NAME
			, D.DEPT_NAME
			, R.RANK_NAME
		FROM EMP E
		JOIN DEPT D
		ON E.DEPT_CODE = D.DEPT_CODE
		JOIN RANK R
		ON E.RANK_CODE = R.RANK_CODE
		JOIN RIGHT T
		ON E.RIGHT_CODE = T.RIGHT_CODE
		WHERE E.RIGHT_CODE = '4'
		AND E.EMP_NAME LIKE '%' ||  #{word} || '%'
		ORDER BY R.RANK_CODE ASC, D.DEPT_DEPTH ASC
	</select>
	
	<update id="updateEmpToAdmin" parameterType="java.util.Map">
		<foreach collection="empCodeList" item="item" index="index" open="DECLARE BEGIN" close="; END;" separator=";">
			UPDATE EMP
			SET
				RIGHT_CODE = #{rightCodeList[0]}
				WHERE EMP_CODE = #{item}
		 </foreach> 
	</update>
	
	
	<select id="selectRankListForManagement" resultType="RankVo">
		SELECT
		    RANK_LEVEL
		    , LISTAGG(RANK_NAME,' ') WITHIN GROUP (ORDER BY RANK_CODE) RANK_NAME
		  FROM RANK
		 GROUP BY RANK_LEVEL
	</select>
	
	
	<insert id="insertRank">
		INSERT INTO RANK 
		(
			RANK_CODE
			, RANK_LEVEL
			, RANK_NAME
		)
		VALUES
		(
			SEQ_RANK_NO.NEXTVAL
			, #{rankLevel}
			, #{rankName}
		)
	</insert>
	
	<update id="updateRankName" parameterType="java.util.Map">
	
	</update>
	
	
</mapper>



















