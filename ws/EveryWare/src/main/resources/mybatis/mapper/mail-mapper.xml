<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mailMapper">
	
	<select id="selectList" resultType="MailVo">
		SELECT
		MAIL.MAIL_CODE
		,MAIL.EMP_CODE
		,MAIL.MAIL_SENDER 
		,MAIL.MAIL_TITLE
		,MAIL.MAIL_CONTENT
		,MAIL.MAIL_SENDDATE
		,MAIL.MAIL_RECEIVER
		,MAIL.MAIL_VIEWS
		,MAIL.MAIL_DELETE 
		FROM MAIL
		JOIN EMP
		ON MAIL.EMP_CODE = EMP.EMP_CODE
		WHERE MAIL_DELETE IS NULL
		ORDER BY MAIL_CODE DESC
		
	</select>	
	
	<!-- 동적쿼리 없이 그냥 쿼리문 여러개 만들기 -->
	<!-- 조건별 쿼리문 전부 만들기 -->
	<!-- 실행 -->
	
	<select id="selectSearchList" resultType="MailVo">
		 SELECT
		* FROM MAIL
		JOIN EMP
		ON MAIL.EMP_CODE = EMP.EMP_CODE
		WHERE MAIL_DELETE IS NULL
		<if test="searchType=='title' and keyword != null and keyword != '' ">
			AND MAIL_TITLE LIKE CONCAT('%', #{keyword}, '%')
		</if>
       <if test="searchType=='send_id' and keyword != null and keyword != '' ">
			AND MAIL_SENDER LIKE CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType=='all' and keyword != null and keyword != '' ">
			AND MAIL_SENDER LIKE CONCAT('%', #{keyword}, '%')
			OR MAIL_TILTE LIKE CONCAT('%',#{keyword},'%')
		</if>
		ORDER BY MAIL_CODE DESC
		
			
	</select>	
	
	<select id="selectSearchTotalCnt" resultType="int">
		SELECT COUNT (*)
		FROM MAIL
		WHERE MAIL_DELETE IS NULL
		
			
	</select>	
		
	<select id="selectCountAll" resultType="int">
		SELECT COUNT (*)
		FROM MAIL
		WHERE MAIL_DELETE IS NULL
			
			
	</select>	
	
		
		
	<insert id="insertMail">
		INSERT INTO MAIL 
		(
		MAIL_CODE
		, EMP_CODE
		, MAIL_SENDER
		, MAIL_TITLE
		, MAIL_CONTENT
		, MAIL_SENDDATE
		, MAIL_RECEIVER
		)
		VALUES 
		(
		SEQ_MAIL_CODE.NEXTVAL
		 ,#{empCode}
		 ,#{mailSender}
		 ,#{mailTitle}
		 ,#{mailContent}
		 ,SYSDATE
		 ,#{mailReceiver}
		 )
	</insert>
	
	<update id="deleteMail">
		UPDATE MAIL
		SET
		MAIL_DELETE = SYSDATE
		WHERE MAIL_CODE = #{mailCode}
	</update>
	
	<select id="selectTrashlist" resultType="MailVo">
		SELECT
		MAIL.MAIL_CODE
		,MAIL.EMP_CODE
		,MAIL.MAIL_SENDER 
		,MAIL.MAIL_TITLE
		,MAIL.MAIL_CONTENT
		,MAIL.MAIL_SENDDATE
		,MAIL.MAIL_RECEIVER
		,MAIL.MAIL_VIEWS
		,MAIL.MAIL_DELETE 
		FROM MAIL
		JOIN EMP
		ON MAIL.EMP_CODE = EMP.EMP_CODE
		WHERE MAIL_DELETE IS NOT NULL
		ORDER BY MAIL_DELETE DESC
	</select>
	
	<delete id="cleanMail">
		DELETE 
		FROM MAIL WHERE MAIL_DELETE IS NOT NULL
		AND MAIL_CODE = #{mailCode}
	</delete>
	
	<update id="backMail">
		UPDATE MAIL
		SET
		MAIL_DELETE = NULL
		WHERE MAIL_CODE = #{mailCode}
	</update>
	
	<select id="selectSendlist" resultType="MailVo">
		SELECT
		MAIL.MAIL_CODE
		,MAIL.EMP_CODE
		,MAIL.MAIL_SENDER 
		,MAIL.MAIL_TITLE
		,MAIL.MAIL_CONTENT
		,MAIL.MAIL_SENDDATE
		,MAIL.MAIL_RECEIVER
		,MAIL.MAIL_VIEWS
		,MAIL.MAIL_DELETE 
		FROM MAIL
		JOIN EMP
		ON MAIL.EMP_CODE = EMP.EMP_CODE
		WHERE MAIL_DELETE IS NULL
		ORDER BY MAIL_CODE DESC
	</select>
	
	<select id="selectRelist" resultType="MailVo">
		SELECT
		MAIL.MAIL_CODE
		,MAIL.EMP_CODE
		,MAIL.MAIL_SENDER 
		,MAIL.MAIL_TITLE
		,MAIL.MAIL_CONTENT
		,MAIL.MAIL_SENDDATE
		,MAIL.MAIL_RECEIVER
		,MAIL.MAIL_VIEWS
		,MAIL.MAIL_DELETE 
		FROM MAIL
		JOIN EMP
		ON MAIL.EMP_CODE = EMP.EMP_CODE
		WHERE MAIL_DELETE IS NULL
		ORDER BY MAIL_CODE DESC
	</select>		
	
	<insert id="replyMail">
		INSERT INTO MAIL 
		(
		MAIL_CODE
		, EMP_CODE
		, MAIL_SENDER
		, MAIL_TITLE
		, MAIL_CONTENT
		, MAIL_SENDDATE
		, MAIL_RECEIVER
		)
		VALUES 
		(
		SEQ_MAIL_CODE.NEXTVAL
		 ,#{empCode}
		 ,#{mailSender}
		 ,#{mailTitle}
		 ,#{mailContent}
		 ,SYSDATE
		 ,#{mailReceiver}
		 )
	</insert>
	
	<insert id="selfMail">
		INSERT INTO MAIL 
		(
		MAIL_CODE
		, EMP_CODE
		, MAIL_SENDER
		, MAIL_TITLE
		, MAIL_CONTENT
		, MAIL_SENDDATE
		, MAIL_RECEIVER
		)
		VALUES 
		(
		SEQ_MAIL_CODE.NEXTVAL
		 ,#{empCode}
		 ,#{mailSender}
		 ,#{mailTitle}
		 ,#{mailContent}
		 ,SYSDATE
		 ,#{mailReceiver}
		 )
	</insert>
	
	<select id="selectSelflist" resultType="MailVo">
		SELECT
		MAIL.MAIL_CODE
		,MAIL.EMP_CODE
		,MAIL.MAIL_SENDER 
		,MAIL.MAIL_TITLE
		,MAIL.MAIL_CONTENT
		,MAIL.MAIL_SENDDATE
		,MAIL.MAIL_RECEIVER
		,MAIL.MAIL_VIEWS
		,MAIL.MAIL_DELETE 
		FROM MAIL
		JOIN EMP
		ON MAIL.EMP_CODE = EMP.EMP_CODE
		WHERE MAIL_DELETE IS NULL
		ORDER BY MAIL_CODE DESC
	</select>
	
	<select id="selectMail" resultType="MailVo">
		SELECT
		MAIL.MAIL_CODE
		,MAIL.EMP_CODE
		,MAIL.MAIL_SENDER 
		,MAIL.MAIL_TITLE
		,MAIL.MAIL_CONTENT
		,MAIL.MAIL_SENDDATE
		,MAIL.MAIL_RECEIVER
		,MAIL.MAIL_VIEWS
		,MAIL.MAIL_DELETE 
		FROM MAIL
		JOIN EMP
		ON MAIL.EMP_CODE = EMP.EMP_CODE
		WHERE MAIL_CODE = #{mailCode}
		ORDER BY MAIL_CODE DESC
	</select>
	
	<update id="deleteOne">
		UPDATE MAIL
		SET
		MAIL_DELETE = SYSDATE
		WHERE MAIL_CODE = #{mailCode}
	</update>
	
	
	
	<select id="selectDeleteAll" resultType="int">
		SELECT COUNT (*)
		FROM MAIL
		WHERE MAIL_DELETE IS NOT NULL
	</select>
	
	<update id="increaseViews">
		UPDATE MAIL
		SET MAIL_VIEWS = MAIL_VIEWS + 1
		WHERE MAIL_CODE = #{mailCode}
	</update>
	
	<update id="readMail">
		UPDATE MAIL
		SET
		MAIL_VIEWS = 1
		WHERE MAIL_CODE = #{mailCode}
	</update>
	
	<update id="noReadmail">
		UPDATE MAIL
		SET
		MAIL_VIEWS = 0
		WHERE MAIL_CODE = #{mailCode}
	</update>
</mapper>
